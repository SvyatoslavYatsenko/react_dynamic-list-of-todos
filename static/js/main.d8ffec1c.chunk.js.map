{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","callback","selectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","value","onChange","event","target","placeholder","trim","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","allTodos","setTodos","selectTodo","toLowerCompare","str","part","toLowerCase","includes","visibleTodos","useMemo","filter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8ffec1c.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  callback: Dispatch<SetStateAction<Todo | null>>,\n  selectedTodo: Todo | null,\n};\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  callback,\n  selectedTodo,\n\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        { todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={id}\n              className={classNames(\n                { 'has-background-info-light': selectedTodo === todo },\n              )}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames('has-text-success',\n                    { 'has-text-danger': completed === false })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => callback(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far',\n                      { 'fa-eye': selectedTodo !== todo },\n                      { 'fa-eye-slash': selectedTodo === todo })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filterBy: string,\n  setFilterBy: React.Dispatch<React.SetStateAction<string>>,\n  query:string,\n  setQuery: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  const handleSortBy = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleSortBy}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        { query.trim()\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, {\n  Dispatch, SetStateAction, useEffect, useState,\n} from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  callback: Dispatch<SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, callback }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const handler = () => {\n    callback(null);\n    setUser(null);\n  };\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo]);\n\n  return selectedTodo && (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? (<Loader />)\n\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handler}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                { selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\n// import { User } from './types/User';\n\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [allTodos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, selectTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  function toLowerCompare(str: string, part: string): boolean {\n    return str\n      .toLowerCase()\n      .includes(part.toLowerCase());\n  }\n\n  const visibleTodos = useMemo(() => {\n    switch (filterBy) {\n      case 'all':\n        return (allTodos.filter(({ title }) => toLowerCompare(title, query)));\n      case 'active':\n        return (allTodos.filter(todo => todo.completed === false)\n          .filter(({ title }) => toLowerCompare(title, query)));\n      case 'completed':\n        return (allTodos.filter(todo => todo.completed === true)\n          .filter(({ title }) => toLowerCompare(title, query)));\n      default:\n        return [];\n    }\n  }, [filterBy, allTodos, query]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              { !allTodos.length\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    callback={selectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        selectedTodo={selectedTodo}\n        callback={selectTodo}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}